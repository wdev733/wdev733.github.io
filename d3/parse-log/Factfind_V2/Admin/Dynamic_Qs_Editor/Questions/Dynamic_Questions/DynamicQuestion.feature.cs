// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Enable_UIAutomation.Features.Factfind_V2.Admin.Dynamic_Qs_Editor.Questions.Dynamic_Questions
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("DynamicQuestion", new string[] {
            "Reg"}, Description="\tAs an Advisor \r\n\tI want to create bespoke questions for a Fact Find\r\n\tSo that i " +
        "can make Fact Find templates individual to my organisation", SourceFile="Features\\Factfind_V2\\Admin\\Dynamic_Qs_Editor\\Questions\\Dynamic_Questions\\DynamicQ" +
        "uestion.feature", SourceLine=1)]
    public partial class DynamicQuestionFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DynamicQuestion.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DynamicQuestion", "\tAs an Advisor \r\n\tI want to create bespoke questions for a Fact Find\r\n\tSo that i " +
                    "can make Fact Find templates individual to my organisation", ProgrammingLanguage.CSharp, new string[] {
                        "Reg"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void CreateANewQuestionGrouping(string owner, string title, string description, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LoginEnableTaur"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a new Question Grouping", null, @__tags);
#line 8
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And(string.Format("I select an \"{0}\"", owner), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I choose to create a new group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And(string.Format("I create a new question group with \"{0}\" and \"{1}\"", title, description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("I can see \"Saved Question grouping has been created\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Create a new Question Grouping, DMA", new string[] {
                "LoginEnableTaur"}, SourceLine=17)]
        public virtual void CreateANewQuestionGrouping_DMA()
        {
#line 8
this.CreateANewQuestionGrouping("DMA", "DAM Orange", "Orange Description", ((string[])(null)));
#line hidden
        }
        
        public virtual void AddANewQuestionOfTypeSingleAnswerInQuestionsEditorWithInternalSource(string title, string text, string pre, string post, string help, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Smoke",
                    "LoginEnableTaur"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a new question of type Single answer in Questions editor with Internal source" +
                    "", null, @__tags);
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.And("I am on \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And(string.Format("I create a new question \"Single Answer\" with \"{0}\" and \"{1}\"", title, text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I click on screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And(string.Format("I see \"{0}\" in preview panel", text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I create Internal source options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And(string.Format("I provide \"{0}\", \"{1}\", and \"{2}\" additional text fields", pre, post, help), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("I can see \"Question has been created.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add a new question of type Single answer in Questions editor with Internal source" +
            ", Question1", new string[] {
                "Smoke",
                "LoginEnableTaur"}, SourceLine=33)]
        public virtual void AddANewQuestionOfTypeSingleAnswerInQuestionsEditorWithInternalSource_Question1()
        {
#line 22
this.AddANewQuestionOfTypeSingleAnswerInQuestionsEditorWithInternalSource("Question1", "What goes on this pizza?", "PreText", "PostText", "HelpText", ((string[])(null)));
#line hidden
        }
        
        public virtual void AddAQuestionToAnExistingGroup(string owner, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Smoke",
                    "LoginEnableTaur"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a question to an existing group", null, @__tags);
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 39
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
 testRunner.And(string.Format("I select an \"{0}\"", owner), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I choose to open an existing group \"Zorlak\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I choose to add a question \"Question1\" into the group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("I can see \"Saved Question grouping has been updated.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add a question to an existing group, System", new string[] {
                "Smoke",
                "LoginEnableTaur"}, SourceLine=46)]
        public virtual void AddAQuestionToAnExistingGroup_System()
        {
#line 38
this.AddAQuestionToAnExistingGroup("System", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Delete a question from existing group", new string[] {
                "ExistingQuestionGroup"}, SourceLine=49)]
        public virtual void DeleteAQuestionFromExistingGroup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete a question from existing group", null, new string[] {
                        "ExistingQuestionGroup"});
#line 50
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 51
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I select an existing Owner and Grouping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("I choose to remove a question in preview panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.Then("I can see \"Saved Question grouping has been updated\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add a dependant question", new string[] {
                "ExistingQuestionGroup"}, SourceLine=58)]
        public virtual void AddADependantQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a dependant question", null, new string[] {
                        "ExistingQuestionGroup"});
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 60
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I select an existing Owner and Grouping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("I see a preview of question in the group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("I see Add dependant question icons next to the options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.When("I click on the dependant question icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("I should be able to add a dependant question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AddANewQuestionOfTypeMultipleAnswer(string title, string text, string pre, string post, string help, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LoginEnableTaur"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a new question of type Multiple answer", null, @__tags);
#line 69
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 70
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
 testRunner.And("I am on \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And(string.Format("I create a new question \"Multiple Answer\" with \"{0}\" and \"{1}\"", title, text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("I click on screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("I see it in preview panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I create Internal source options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("I give Input and validation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And(string.Format("I provide \"{0}\", \"{1}\", and \"{2}\" additional text fields", pre, post, help), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.Then("I can see \"Saved Question has been created.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add a new question of type Multiple answer, Question1", new string[] {
                "LoginEnableTaur"}, SourceLine=81)]
        public virtual void AddANewQuestionOfTypeMultipleAnswer_Question1()
        {
#line 69
this.AddANewQuestionOfTypeMultipleAnswer("Question1", "Question1", "PreText", "PostText", "HelpText", ((string[])(null)));
#line hidden
        }
        
        public virtual void AddANewQuestionOfTypeTextAnswer(string title, string text, string pre, string post, string help, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LoginEnableTaur"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a new question of type Text answer", null, @__tags);
#line 86
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 87
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
 testRunner.And("I am on \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And(string.Format("I create a new question \"Text Answer\" with \"{0}\" and \"{1}\"", title, text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.And("I click on screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("I see it in question preview panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("I give Input and validation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And(string.Format("I provide \"{0}\", \"{1}\", and \"{2}\" additional text fields", pre, post, help), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.Then("I can see \"Saved Question has been created.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add a new question of type Text answer, Question2", new string[] {
                "LoginEnableTaur"}, SourceLine=97)]
        public virtual void AddANewQuestionOfTypeTextAnswer_Question2()
        {
#line 86
this.AddANewQuestionOfTypeTextAnswer("Question2", "Question2", "PreText", "PostText", "HelpText", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Make a question mandatory in the existing group", new string[] {
                "ExistingQuestionGroup"}, SourceLine=100)]
        public virtual void MakeAQuestionMandatoryInTheExistingGroup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Make a question mandatory in the existing group", null, new string[] {
                        "ExistingQuestionGroup"});
#line 101
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 102
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 103
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("I select an existing Owner and Grouping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("I choose to add a question \"Question1\" into the group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And("I choose to make an question mandatory in preview panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
 testRunner.Then("I can see \"Saved Question grouping has been updated\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Make a question optional in the existing group", new string[] {
                "ExistingQuestionGroup"}, SourceLine=110)]
        public virtual void MakeAQuestionOptionalInTheExistingGroup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Make a question optional in the existing group", null, new string[] {
                        "ExistingQuestionGroup"});
#line 111
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 112
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
 testRunner.And("I select an existing Owner and Grouping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("I choose to add a question \"Question1\" into the group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("I choose to make a mandatory question to optional in preview panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
 testRunner.Then("I can see \"Saved Question grouping has been updated\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Show Prompt Message When Clicking on Add button without selecting a question", new string[] {
                "ExistingQuestionGroup"}, SourceLine=121)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void ShowPromptMessageWhenClickingOnAddButtonWithoutSelectingAQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show Prompt Message When Clicking on Add button without selecting a question", null, new string[] {
                        "ignore",
                        "ExistingQuestionGroup"});
#line 122
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 123
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 124
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
 testRunner.And("I select an existing Owner and Grouping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I do not select a question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.When("I click on Add question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
 testRunner.Then("I can see \"Please select a quesstion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open an existing question", new string[] {
                "ExistingQuestionGroup"}, SourceLine=130)]
        public virtual void OpenAnExistingQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open an existing question", null, new string[] {
                        "ExistingQuestionGroup"});
#line 131
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 132
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 133
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I select an existing Owner and Grouping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.Then("I see all the fields of the question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Rearrange the order of questions in the existing question", new string[] {
                "ExistingQuestionGroup"}, SourceLine=138)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void RearrangeTheOrderOfQuestionsInTheExistingQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rearrange the order of questions in the existing question", null, new string[] {
                        "ignore",
                        "ExistingQuestionGroup"});
#line 139
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 140
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("I select an existing Owner and Grouping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.And("I choose to add a question \"Question1\" into the group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I choose to add a question \"Question2\" into the group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.And("I choose to drag the questions in preview panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
 testRunner.Then("I can see \"Saved Question grouping has been updated\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Question groupings field in question editor", new string[] {
                "ExistingQuestionGroupAndQuestion"}, SourceLine=150)]
        public virtual void QuestionGroupingsFieldInQuestionEditor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Question groupings field in question editor", null, new string[] {
                        "ExistingQuestionGroupAndQuestion"});
#line 151
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 152
 testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 153
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.And("I select an existing Owner and Grouping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
 testRunner.And("I choose to add a question into the group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
 testRunner.And("I see question added to preview panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
 testRunner.And("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("I navigate to \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.When("I open the question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
 testRunner.Then("I see the group name in question grouping field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AdditionalTextFieldsInQuestionEditor(string title, string text, string pre, string post, string help, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LoginEnableTaur"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Additional Text Fields in question editor", null, @__tags);
#line 163
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 164
testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 165
 testRunner.And("I am on \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.And(string.Format("I create a new question \"Single Answer\" with \"{0}\" and \"{1}\"", title, text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.And("I click on screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
 testRunner.And(string.Format("I see \"{0}\" in preview panel", text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.And("I create Internal source options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.And(string.Format("I provide \"{0}\", \"{1}\", and \"{2}\" additional text fields", pre, post, help), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
 testRunner.Then(string.Format("I see \"{0}\" before the options", pre), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 173
 testRunner.And(string.Format("I see \"{0}\" after the options", post), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.And(string.Format("I see \"{0}\" adjacent to the question text", help), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Additional Text Fields in question editor, Question1", new string[] {
                "LoginEnableTaur"}, SourceLine=176)]
        public virtual void AdditionalTextFieldsInQuestionEditor_Question1()
        {
#line 163
this.AdditionalTextFieldsInQuestionEditor("Question1", "What goes on this pizza?", "PreText", "PostText", "HelpText", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change Font Format to Bold in Additional Text Fields", new string[] {
                "ExistingQuestion"}, SourceLine=179)]
        public virtual void ChangeFontFormatToBoldInAdditionalTextFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change Font Format to Bold in Additional Text Fields", null, new string[] {
                        "ExistingQuestion"});
#line 180
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 181
    testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
 testRunner.And("I am on \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("I open an existing question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.When("I choose the text in the additional text fields to be bold", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
 testRunner.Then("I see the text change to bold in the preview", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change Font Format to Italics in Additional Text Fields", new string[] {
                "ExistingQuestion"}, SourceLine=187)]
        public virtual void ChangeFontFormatToItalicsInAdditionalTextFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change Font Format to Italics in Additional Text Fields", null, new string[] {
                        "ExistingQuestion"});
#line 188
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 189
    testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 190
 testRunner.And("I am on \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.And("I open an existing question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.When("I choose the text in the additional text fields to be Italic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 193
 testRunner.Then("I see the text change to Italic in the preview", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change Font Format to Headling in Additional Text Fields", new string[] {
                "ExistingQuestion"}, SourceLine=195)]
        public virtual void ChangeFontFormatToHeadlingInAdditionalTextFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change Font Format to Headling in Additional Text Fields", null, new string[] {
                        "ExistingQuestion"});
#line 196
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 197
    testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 198
 testRunner.And("I am on \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.And("I open an existing question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.When("I choose the text in the additional text fields to be a Heading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
 testRunner.Then("I see the text change to a Heading in the preview", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Dynamic Question Group - Mandatory Validaton", new string[] {
                "validation",
                "LoginEnableTaur"}, SourceLine=204)]
        public virtual void DynamicQuestionGroup_MandatoryValidaton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dynamic Question Group - Mandatory Validaton", null, new string[] {
                        "validation",
                        "LoginEnableTaur"});
#line 205
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 206
    testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 207
 testRunner.And("I am on \"Groupings\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
 testRunner.And("I choose to create a new group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
 testRunner.And("I remove the question group title", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
 testRunner.And("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.And("I can see the error message as \"The Title field is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.And("I enter the question group title as \"Group_02\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
 testRunner.Then("I can see \"Saved Question grouping has been created.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Dynamic Question - Mandatory Validaton", new string[] {
                "validation",
                "LoginEnableTaur"}, SourceLine=217)]
        public virtual void DynamicQuestion_MandatoryValidaton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dynamic Question - Mandatory Validaton", null, new string[] {
                        "validation",
                        "LoginEnableTaur"});
#line 218
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 219
    testRunner.Given("I am in Dynamic Questions Editor page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 220
 testRunner.And("I am on \"Questions\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.And("I create a question \"Single Answer\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.And("I can see the error message as \" Option Text is required.; Option Value is requir" +
                    "ed.; The Text field is required.; The Title field is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
 testRunner.And("I create a new question with title as \"Question_02\" and text as \"What goes on thi" +
                    "s pizza?\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
 testRunner.And("I create Internal source options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.When("I save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 227
 testRunner.Then("I can see \"Saved Question has been created.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

